---
title: "AD_dataset_exploration"
format: html
author: "Maaike Kessen"
editor: visual
---

# Alzheimerâ€™s disease analysis: data exploration

```{r}
#list all required packages
packages <- c(
  "ggplot2", "caret", "tidyverse", "dplyr",
  "pROC", "broom", "gt", "randomForest", "glmnet"
)

#check which are not installed and install them automatically
installed <- packages %in% rownames(installed.packages())
if (any(!installed)) {
  cat("Installing missing packages:\n")
  install.packages(packages[!installed], dependencies = TRUE)
}

#load all packages
invisible(lapply(packages, library, character.only = TRUE))
```

```{r}
#set the working directory
#(change this path to match your local device)
setwd("C:/Users/Maaike/Documents/uni/scientific programming/assignment/ScientificProgrammingAssignment")

# Read the cleaned CSV produced by the cleaning script
# (write.csv creates comma-separated files)
df <- read.csv(
  file = "cleaned_alzheimers_dataset.csv",
  header = TRUE,
  sep = ",",            # <-- comma!
  na.strings = "NA",    # write.csv writes NA as "NA" by default
  stringsAsFactors = FALSE
)

#sanity check
str(df)
summary(df)
```

## Define variable blocks

In the code below, I define some blocks that are used later in the analysis, therefore getting rid of redundancies.

```{r}
cognitive_vars <- c("MMSE", "ADL", "FunctionalAssessment")
clinical_vars  <- c("Age", "Gender", "Hypertension", "Diabetes", "Depression")
lifestyle_vars <- c("PhysicalActivity", "DietQuality", "SleepQuality", "AlcoholConsumption")
symptom_vars   <- c("MemoryComplaints", "BehavioralProblems", "Confusion",
                    "Disorientation", "PersonalityChanges", "Forgetfulness",
                    "DifficultyCompletingTasks")

#create a named list for easy iteration in later analyses
blocks <- list(
  Cognitive  = cognitive_vars,
  Clinical   = clinical_vars,
  Lifestyle  = lifestyle_vars,
  Symptoms   = symptom_vars
)
```

## Exploratory Data Visualization: Boxplots and Barplots

In this section, I provide a first visualexploration of the dataset.

-   Boxplots for numeric variables help assess their distribution and identify potential outliers.

-   Barplots for categorical variables give an overview of class balance and category frequencies.

Together, these visual checks confirm that the dataset is well-structured and suitable for statistical modeling.

```{r}
#numeric variables: boxplots 
numeric_vars <- c("Age", "BMI", "AlcoholConsumption", "PhysicalActivity",
                  "DietQuality", "SleepQuality", "SystolicBP", "DiastolicBP",
                  "CholesterolTotal", "CholesterolLDL", "CholesterolHDL",
                  "CholesterolTriglycerides", "MMSE", "FunctionalAssessment", "ADL")

#only keep variables that exist in the dataset
numeric_vars <- intersect(numeric_vars, names(df))

#create boxplots to inspect distributions and detect potential outliers
for (var in numeric_vars) {
  boxplot(df[[var]],
          main = paste("Boxplot of", var),
          ylab = var,
          col = "lightblue",
          border = "gray40")
}

#categorical variables: barplots 
cat_vars <- c("Gender", "Ethnicity", "EducationLevel", "Smoking",
              "FamilyHistoryAlzheimers", "CardiovascularDisease", "Diabetes",
              "Depression", "HeadInjury", "Hypertension", "MemoryComplaints",
              "BehavioralProblems", "Confusion", "Disorientation", "PersonalityChanges",
              "DifficultyCompletingTasks", "Forgetfulness", "Diagnosis")

#only include columns that exist in the dataset
cat_vars <- intersect(cat_vars, names(df))

#create barplots to visualize class balance and categorical distributions
for (var in cat_vars) {
  barplot(table(df[[var]]),
          main = paste("Barplot of", var),
          xlab = var,
          ylab = "Count",
          col = "lightgreen",
          border = "gray40")
}
```

## Exploratory visualization by diagnosis

This plot shows how often Alzheimer's-related symptoms occur in patients with and without a diagnosis. The symptoms 'behavioral problems' and 'memory complaints' appear to be more frequent in AD patients.

```{r}
#use symptom block
symptom_vars <- intersect(blocks$Symptoms, names(df))

#summarize proportion of "Yes" responses for each symptom variable per diagnosis group
symptom_summary <- df %>%
  group_by(Diagnosis) %>%
  summarise(across(all_of(symptom_vars), ~ mean(.x == "Yes", na.rm = TRUE))) %>%
  pivot_longer(-Diagnosis, names_to = "Symptom", values_to = "Proportion")

#visualize symptom prevalence differences between AD and No AD
ggplot(symptom_summary, aes(x = Symptom, y = Proportion, fill = Diagnosis)) +
  geom_col(position = "dodge") +
  scale_fill_manual(values = c("No AD" = "#E69F00", "AD" = "#56B4E9")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 30, hjust = 1)) +
  labs(title = "Symptom Prevalence by Diagnosis",
       x = "Symptom", y = "Proportion of Patients", fill = "Diagnosis")
```

These boxplots compare lifestyle and clinical factors between groups. There does not seem to be a separation between the AD and no-AD group, suggesting that these features have limited predictive power.

```{r}
#define all continuous (numeric) lifestyle + clinical variables
continuous_vars <- c(
  "Age", "BMI", "AlcoholConsumption", "PhysicalActivity", "DietQuality",
  "SleepQuality", "SystolicBP", "DiastolicBP", "CholesterolTotal",
  "CholesterolLDL", "CholesterolHDL", "CholesterolTriglycerides"
)

#keep only those that exist in the dataset
continuous_vars <- intersect(continuous_vars, names(df))

#reshape for plotting
df_long <- df %>%
  select(Diagnosis, all_of(continuous_vars)) %>%
  pivot_longer(-Diagnosis, names_to = "Variable", values_to = "Value")

#create boxplots
ggplot(df_long, aes(x = Diagnosis, y = Value, fill = Diagnosis)) +
  geom_boxplot(alpha = 0.6, outlier.size = 0.8) +
  scale_fill_manual(values = c("No AD" = "#E69F00", "AD" = "#56B4E9")) +
  facet_wrap(~ Variable, scales = "free_y", ncol = 3) +
  theme_minimal() +
  labs(
    title = "Continuous Lifestyle and Clinical Variables by Diagnosis",
    subtitle = "Distributions of key continuous variables across AD and No AD groups",
    x = "Diagnosis", y = "Value", fill = "Diagnosis"
  )
```
